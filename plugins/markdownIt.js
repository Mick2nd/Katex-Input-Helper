(()=>{var n={391:function(n){var e=this&&this.__awaiter||function(n,e,t,r){return new(t||(t=Promise))((function(o,i){function u(n){try{c(r.next(n))}catch(n){i(n)}}function l(n){try{c(r.throw(n))}catch(n){i(n)}}function c(n){var e;n.done?o(n.value):(e=n.value,e instanceof t?e:new t((function(n){n(e)}))).then(u,l)}c((r=r.apply(n,e||[])).next())}))};n.exports={default:function(n){const t=n.pluginId;return console.info(`${t} : Here in Plugin default (OUTER) function`),{plugin:function(n,r){return e(this,void 0,void 0,(function*(){console.info(`${t} : Here in Plugin (INNER) function : test `);const e=n.renderer.rules.math_block;console.info(`${t} : Original math_block renderer stored`),n.renderer.rules.math_block=function(n,r){return function(n,e,r,o){let i=r[o];console.debug(`${t} : Invoking Original math_block render function at ${o} : %O`,i);let u=n(r,o);return console.info(`${t} : Original math_block render function invoked at ${o} : %O`,i),u}(e,0,n,r)};const o=n.renderer.rules.math_inline;console.info(`${t} : Original math_inline renderer stored`),n.renderer.rules.math_inline=function(n,e){return function(n,e,r,o){let i=r[o];console.debug(`${t} : Invoking Original math_inline render function at ${o} : %O`,i);let u=n(r,o);return console.info(`${t} : Original math_inline render function invoked at ${o} : %O %O`,i,e),u}(o,r,n,e)}}))},assets:function(){return[]}}}}}},e={},t=function t(r){var o=e[r];if(void 0!==o)return o.exports;var i=e[r]={exports:{}};return n[r].call(i.exports,i,i.exports,t),i.exports}(391);exports.default=t.default})();